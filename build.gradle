buildscript {
    ext {
        springBootVersion = '1.5.2.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.liquibase:liquibase-gradle-plugin:1.2.4")
        classpath("org.postgresql:postgresql:42.0.0")
        classpath("org.asciidoctor:asciidoctor-gradle-plugin:1.5.3")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.liquibase.gradle'
apply plugin: 'org.asciidoctor.convert'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
}

jar {
    baseName = 'order-service'
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}/html5") {
        into 'static/restdocs'
    }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-actuator-docs')
    compile('org.springframework.cloud:spring-cloud-starter-eureka')
    compile('org.springframework.cloud:spring-cloud-starter-config')
    compile('org.springframework.cloud:spring-cloud-starter-feign')
    compile('org.springframework.boot:spring-boot-starter-validation')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.apache.commons:commons-lang3:3.3.2')
    compile('org.projectlombok:lombok')
    compile('org.springframework.cloud:spring-cloud-starter-oauth2')
    compile('org.springframework.security:spring-security-jwt')

    runtime('org.springframework.retry:spring-retry')
    runtime('org.springframework.boot:spring-boot-starter-aop')
    runtime('org.springframework.boot:spring-boot-devtools')
    runtime('org.postgresql:postgresql')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.boot:spring-boot-starter-data-jpa')
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
    testCompile('com.h2database:h2')
    testCompile('org.easymock:easymock:3.1')
}

liquibase {
    activities {
        main {
            changeLogFile 'src/main/resources/db/changelog/db.changelog.xml'
            url 'jdbc:postgresql://localhost:5432/order_service'
            defaultSchemaName "${schemaName}"
            username "${username}"
            password "${password}"
        }
    }
}

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    systemProperty "spring.profiles.active", "test"
    outputs.dir snippetsDir
}

asciidoctor {
    attributes 'snippets': snippetsDir
    inputs.dir snippetsDir
    outputDir "build/asciidoc"
    dependsOn test
    sourceDir 'src/main/asciidoc'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Dalston.RELEASE"
    }
}

apply from: 'dbTasks.gradle'
